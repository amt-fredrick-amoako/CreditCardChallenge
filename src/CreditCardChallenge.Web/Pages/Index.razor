@page "/"
@inject IJSRuntime JsRuntime


<div class="form-container">

    <CardComponent CardDetails="@CardDetails" />

    <div class="form-input">
        <div class="input-container">
            <label for="exampleFormControlInput1" class="form-label">Card Number</label>
            <input maxlength="16" pattern="[0-9]" type="text" class="input-control" @bind="@CardDetails.CardNumber" @bind:event="oninput">
        </div>
        <div class="input-container">
            <label for="exampleFormControlInput1" class="form-label">Card Name</label>
            <input type="text" class="input-control" @bind="@CardDetails.CardName" @bind:event="oninput">
        </div>
        <div class="input-container">
            <label for="exampleFormControlInput1" class="form-label">Expiration Date</label>
            <select name="month" @bind="CardDetails.Month">
                <option disabled selected value="">Month</option>
                @foreach (var month in Months)
                {
                    <option value="@month">@month</option>
                }
            </select>
            <select name="year" @bind="CardDetails.Year">
                <option disabled selected value="">Year</option>
                @foreach (var year in Years)
                {
                    <option value="@year">@year</option>
                }
            </select>
        </div>
        <div class="input-container">
            <label for="exampleFormControlInput1" class="form-label">CVV address</label>
            <input type="text" class="input-control" @bind="@CardDetails.Cvv" @bind:event="oninput">
        </div>
        <div class="input-container">
            <button class="button">Submit</button>
        </div>
    </div>
</div>

@code {
    CardDetails? CardDetails { get; set; }
    ElementReference _cardNumberInput;
    int[] Years = Enumerable.Range(2019, 12).ToArray();

    string[] Months = Enumerable.Range(1, 12)
    .Select(month => month.ToString("D2"))
    .ToArray();

    [Parameter]
    public RenderFragment? CardVisual { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        CardDetails = new();
    }
}
